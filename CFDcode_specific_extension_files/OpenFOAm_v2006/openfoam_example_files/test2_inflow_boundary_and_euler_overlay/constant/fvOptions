/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      fvOptions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// This is a different zone since we use a different ramp duration
// If the duration was the same the origin and directions here could
// be added to the lists above
WaveCreationZone
{
    type            WaveDampToIncident;

    // Define one or more origins and directions
    // The damping is zero at the origin and grows to full damping
    // in the direction of the corresponding normal
    origins         ((15 0 0));
    directions      ((-1 0 0));

    // The ramp is used to define the transition from no damping to
    // full damping. The start is 0 (origin) and the duration is the
    // distance to full damping (the ramps were probably first made
    // for use along the time axis, hence "duration" not "distance")
    ramp
    {
        type        halfCosineRamp;
        start       0;    // distance from origin, typically 0
        duration    15;  // this is the distance from origin to max damping
    }

    // The damping coefficient/penalty factor at maximum damping
    // this is multiplied by the difference between the computed
    // solution and the wanted solution (incident wave velocity).
    // The forcing zone definition (ramps) are also multiplied in to
    // limit the spatial influence of the damping
    penalty 10;
}




//************************************************************************* //
